#include <stdio.h>
#include <string.h>

struct Input{
    char nomor[10];
    char buku[50];
    unsigned int stok;
};
typedef struct Input input;

//Array berisi objek bertipe struct
input item[] =
    {
        {"1001", "Hujan", 20},
        {"1024", "Laut Bercerita", 15},
        {"1030", "Laskar Pelangi", 23},
        {"2031", "Ayah", 27},
        {"2147", "Sang Pemimpi", 21},
        {"2379", "Surat Kecil Untuk Tuhan", 10},
        {"3039", "Rembulan Tenggelam Di Wajahmu", 5},
    };

//Enumeration untuk bagian menu
enum Menu{
    elist=1, // eList
    ewrite, // eWrite
    eread, // eRead
    eupdate, // eUpdate
    eexit // eExit
}; // @ kalo variable biasain awal kata kedua dibuat huruf besar

//Enumeration untuk fungsi update
enum Update{
    enomor=1,
    ejudul,
    estok,
    eall
};

//function prototype
void writedata();
void readdata();
void listdata();
void updatedata();

int main()
{
    int pilih;
    printf("\n=====Menu Program=====\n");
    const char *menuName[] = {
      "",  // @ kalo mau dibuat kebawah jangan nanggung, dn jangan di sama ratain dengan sama dengan, cukup kasih 1 spasi dari baris awal
      "Tampilkan isi array", 
      "Tulis data ke binary file",
      "Baca data dari binary file",
      "Update data",
      "Keluar dari program"
    };
    // @ tiap abis buat logika atau define variable kasih jarak tapi jangan kejauhan
    for(enum Menu menu = elist; menu<=eexit; ++menu){
        printf("%d. %s\n", menu, menuName[menu]);
    }
    // @ tiap abis buat logika atau define variable kasih jarak tapi jangan kejauhan
    while(1){
        printf("\nMasukkan pilihan menu : ");
        scanf("%d", &pilih);
        // @ tiap abis buat logika atau define variable kasih jarak tapi jangan kejauhan
        if(pilih == elist){ // @ tiap kurung kurawal kasih spasi
            listdata();
        }else if(pilih == ewrite){
            writedata();
        }else if(pilih == eread){
            readdata();
        }else if(pilih == eupdate){
            updatedata();
        }else if(pilih == eexit){
            printf("\nTerima Kasih dan Sampai Jumpa\n");
            break;
        }else{
            printf("\nPilihan anda tidak tersedia. Masukkan ulang!\n");
            continue;
        }
    }
    return 0;
}

//function listdata() untuk menampilkan array of struct
void listdata() 
{
    printf("\n%-20s %-50s %5s\n","Nomor Seri","Judul Buku","Jumlah Stok");
    for(int i = 0 ; i < 7 ; i++){ // @ kalo looping array jangan dibiasain ngasih batasan sendiri, pake jumlah isi array untuk kondisi
        printf("%-20s %-50s %5u\n", item[i].nomor, item[i].buku, item[i].stok);
    }
    printf("\n");
}

//function writedata() untuk menyimpan array of struct ke dalam bentuk binary file
void writedata()
{
    FILE *fPtr;
    fPtr = fopen("perpustakaan.bin", "wb");
    if(fPtr != NULL){
            for(int i = 0; i < 7; i++){ // @ ini juga, kan ada fungsi sizeof di c 
                fwrite(item[i].nomor, 10 * sizeof(char), 1, fPtr); // @ lah ini dipakek, kok nggak dipake buat kondisi looping?
                fwrite(item[i].buku, 50 * sizeof(char), 1, fPtr);
                fwrite(&item[i].stok, sizeof(int), 1, fPtr);
            }
            fclose(fPtr);
            printf("Sukses!\nData telah ditulis ke perpustakaan.bin!\n");
    }
    else{
        printf("File perpustakaan.bin tidak tersedia.\n");
    }
}

//function readdata() untuk membaca array of struct yang ada dalam binary file
void readdata()
{
    FILE *fPtr;
    fPtr = fopen("perpustakaan.bin", "rb"); // @ kasih jarah
    if(fPtr != NULL){
        printf("\n%-20s %-50s %5s\n","Nomor Seri","Judul Buku","Jumlah Stok");
        for(int i = 0; i < 7; i++){
            fread(item[i].nomor, 10 * sizeof(char), 1, fPtr);
            fread(item[i].buku, 50 * sizeof(char), 1, fPtr);
            fread(&item[i].stok, sizeof(int), 1, fPtr);
            printf("%-20s %-50s %5u\n", item[i].nomor, item[i].buku, item[i].stok);
        }
        fclose(fPtr);
        printf("\n");
    }
    else{
        printf("File perpustakaan.bin tidak tersedia.\n");
    }
}

//function updatedata() untuk meng-update array of struct
void updatedata()
{
    listdata();

    int ubah,pilih;

    printf("\nMasukkan line yang ingin diubah : ");
    scanf("%d",&ubah);

    input data[] = {0}; // @ ini kenapa define di tengah? kalo define variiable biasain di satu tempat kecuali kondisi khusus

    printf("\n###Perubahan Data###\n");
    const char *ubahName[] = {"", "Nomor seri buku", // @ ni juga sama kaya kasus diatas
                                  "Judul buku",
                                  "Stok buku",
                                  "Semua data buku"};
        for(enum Update update = enomor; update<=eall; ++update){ // ni juga
            printf("%d. %s\n", update, ubahName[update]);
        }
    while(1){
        printf("\nMasukkan pilihan perubahan data : ");
        scanf("%d", &pilih);
        switch(pilih){ // @ tiap fungsi sama logic kasih jarak sama yg atas
            case enomor:
                printf("Nomor seri lama               : %s\n",item[ubah-1].nomor);
                printf("Masukkan nomor seri yang baru : ");
                scanf("%s",data[ubah-1].nomor);
                strcpy(item[ubah-1].nomor,data[ubah-1].nomor);
                printf("Nomor seri telah diperbaharui menjadi => %s\n",item[ubah-1].nomor);
                writedata();
                break;
            case ejudul:
                printf("Judul yang lama               : %s\n", item[ubah-1].buku);
                printf("Masukkan judul yang baru      : ");
                scanf("\n%[^\n]",data[ubah-1].buku);
                strcpy(item[ubah-1].buku,data[ubah-1].buku);
                printf("Judul buku telah diperbaharui menjadi => %s\n",item[ubah-1].buku);
                writedata();
                break;
            case estok:
                printf("Stok yang lama                : %u\n", item[ubah-1].stok);
                printf("Masukkan stok yang baru       : ");
                scanf("%u",&data[ubah-1].stok);
                item[ubah-1].stok = data[ubah-1].stok;
                printf("Stok buku telah diperbaharui menjadi => %u\n",item[ubah-1].stok);
                writedata();
                break;
            case eall:
                printf("Masukkan nomor seri yang baru : ");
                scanf("%s",data[ubah-1].nomor);
                printf("Masukkan judul yang baru      : ");
                scanf("\n%[^\n]",data[ubah-1].buku);
                printf("Masukkan stok yang baru       : ");
                scanf("%u",&data[ubah-1].stok);
                item[ubah-1] = data[ubah-1];
                printf("Data buku telah diperbaharui menjadi => %s\t%s\t%u\n",item[ubah-1].nomor,item[ubah-1].buku,item[ubah-1].stok);
                writedata();
                break;
            default:
                printf("\nPilihan anda tidak tersedia. Masukkan ulang!\n");
                continue;
        }
        break;
    }
}
